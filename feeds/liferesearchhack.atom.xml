<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Koji NOSHITA</title><link href="http://noshita.github.io/" rel="alternate"></link><link href="http://noshita.github.io/feeds/liferesearchhack.atom.xml" rel="self"></link><id>http://noshita.github.io/</id><updated>2015-11-25T19:18:01+09:00</updated><entry><title>Dataverseから画像データをまとめて取得する</title><link href="http://noshita.github.io/posts/00004.html" rel="alternate"></link><updated>2015-11-25T19:18:01+09:00</updated><author><name>Koji NOSHITA</name></author><id>tag:noshita.github.io,2015-11-25:posts/00004.html</id><summary type="html">&lt;h2&gt;問題&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://dataverse.harvard.edu/"&gt;Harvard Dataverse&lt;/a&gt;に保存されている&lt;br /&gt;
あるdatasetから画像データを一括で保存しようとしたらサイズ制限のため &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;***.jpeg (image/jpeg) **** bytes.
***.jpeg (image/jpeg) skipped because the total size of the download bundle exceeded the limit of ** bytes.
***.jpeg (image/jpeg) skipped because the total size of the download bundle exceeded the limit of ** bytes.
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;みたいな記述のMANIFEST.TEXを含んだzipファイルがダウンロードされる．&lt;br /&gt;
結果として，数個しか画像データがダウンロード出来ない．&lt;br /&gt;
手動で一個一個ファイルを落とすなんてイヤだ．&lt;/p&gt;
&lt;h2&gt;解決策&lt;/h2&gt;
&lt;p&gt;画像データそれぞれのurlを取得して，保存する．&lt;/p&gt;
&lt;h2&gt;手順&lt;/h2&gt;
&lt;h3&gt;特定のdataverseがもつfileの一覧を取得する&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://guides.dataverse.org/en/latest/api/index.html"&gt;dataverseのAPI&lt;/a&gt;を見ると
&lt;a href="http://guides.dataverse.org/en/latest/api/search.html"&gt;Search API&lt;/a&gt;があるらしいので，これに従い取得する． &lt;/p&gt;
&lt;p&gt;とりあえずブラウザで確認したいって人は&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;https://dataverse.harvard.edu/api/search?=q=*&amp;amp;subtree=[dataverseのid]&amp;amp;type=file&amp;amp;key=[APIトークン]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でチェック．
[dataverseのid]は欲しいデータをもつdatasetが含まれるdataverseのidを指定する．&lt;br /&gt;
idはdataverseのurlからわかる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;https://dataverse.harvard.edu/dataverse/[dataverseのid]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[APIトークン]はHarvard Dataverseにアカウントを作ると，生成できる．&lt;br /&gt;
参照: &lt;a href="http://guides.dataverse.org/en/latest/user/account.html"&gt;Account Creation &amp;amp; Management&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今回はcURLで&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;curl -X GET https://dataverse.harvard.edu/api/search?=q=*\&amp;amp;subtree=[特定のdataverseのid]\&amp;amp;type=file\&amp;amp;key=[APIトークン] &amp;gt; [保存先のファイル名].json&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;のようにしてjsonファイルとして保存する．&lt;br /&gt;
今回はfilelist.jsonとして保存したとして話を進める．&lt;/p&gt;
&lt;p&gt;特定のdatasetがもつfileの一覧を取得できたら早いのだが， 
subtreeオプションやfqオプションでは対応できなさそう．&lt;br /&gt;
なので一旦全部ダウンロードしてから適当なfileだけを選び出す． &lt;/p&gt;
&lt;h3&gt;必要なfileの取捨選択&lt;/h3&gt;
&lt;p&gt;取得したjsonファイルを読み込んでフィールドの値に応じて必要なfileをフィルタリングする．&lt;br /&gt;
今回はpythonを利用した． &lt;/p&gt;
&lt;p&gt;大体こんな感じ．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="c"&gt;# fileの情報一覧の読み込み&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;filelist.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;filelist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 特定のデータセットを指定するパタン&lt;/span&gt;
&lt;span class="c"&gt;# 今回はDOIで指定する&lt;/span&gt;
&lt;span class="n"&gt;PTNDOI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;quot;[データセットを指定するDOI]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# 欲しいfileの種類を指定するパタン&lt;/span&gt;
&lt;span class="n"&gt;PTNTYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;quot;[fileのtype，e.g. 拡張子]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 必要なfile一覧の生成&lt;/span&gt;
&lt;span class="n"&gt;targetlist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;filelist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;PTNDOI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;dataset_citation&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;PTNTYPE&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;file_type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;targetlist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[データセットを指定するDOI]や[fileのtype]には適切な正規表現パタンを記述する．  &lt;/p&gt;
&lt;p&gt;後でfileをダウンロードするときにファイル名を保持したいので(url,name)を値に持つリストであるtargetlistを作っている．&lt;/p&gt;
&lt;h3&gt;データのダウンロード&lt;/h3&gt;
&lt;p&gt;wgetなどを利用しても良いが，-iオプション利用時に名前を指定する方法がよくわからなかったので引き続きpythonで作業した．&lt;br /&gt;
大体こんな感じ．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;

&lt;span class="c"&gt;# 出力先の指定&lt;/span&gt;
&lt;span class="n"&gt;OUTPURDIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;出力先のディレクトリ&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# fileのダウンロード&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;targetlist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;outputfilepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="c"&gt;# 既にファイルが存在する場合は保存しない&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputfilepath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlretrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;outputfilepath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;今後の課題&lt;/h2&gt;
&lt;p&gt;以上のように，pythonを使うと簡単にDataverseのデータを割と簡単にできた．&lt;br /&gt;
しかし，pythonを使うにしてもホントはもっとdataverseのapiを駆使してシンプルに操作すべきだと思う．&lt;br /&gt;
Search APIのfqオプションの働きとかよくわからないし，例に上がっていたfq=publication_date_s:2015すらうまく機能しなかった．  &lt;/p&gt;
&lt;p&gt;また&lt;a href="guides.dataverse.org/en/latest/api/dataaccess.html"&gt;Data Access API&lt;/a&gt;も存在するので&lt;br /&gt;
もう少し賢くダウンロード出来たかもしれない．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dataverseのAPI&lt;ul&gt;
&lt;li&gt;Search API&lt;/li&gt;
&lt;li&gt;Data Access API&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="blog"></category><category term="dataverse"></category><category term="database"></category></entry></feed>